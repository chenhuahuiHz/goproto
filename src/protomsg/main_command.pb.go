// Code generated by protoc-gen-go.
// source: main_command.proto
// DO NOT EDIT!

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PB_MAIN_ID int32

const (
	// //////////////////////////////////////////////////////////////////////////////////////
	// ����ϵͳ��Ϣʹ�� begin
	PB_MAIN_ID_PB_MAIN_SYS_BEGIN PB_MAIN_ID = 0
	PB_MAIN_ID_PB_MAIN_COMM      PB_MAIN_ID = 1
	PB_MAIN_ID_PB_MAIN_LOGON     PB_MAIN_ID = 2
	PB_MAIN_ID_PB_MAIN_SYS_END   PB_MAIN_ID = 1000
	// //////////////////////////////////////////////////////////////////////////////////////
	// ����ҵ����Ϣʹ�� begin
	PB_MAIN_ID_PB_MAIN_BUSINESS_BEGIN PB_MAIN_ID = 1001
	// add by yuyifei Ϊ�û���ϵ������ID
	PB_MAIN_ID_PB_MAIN_RELATIONSHIP PB_MAIN_ID = 1002
	// add by chenhuahui ֱ����Ϣ����
	PB_MAIN_ID_PB_MAIN_LIVE PB_MAIN_ID = 1003
	// add by zengsibo �û�ģ��
	PB_MAIN_ID_PB_MAIN_USERMODULAR PB_MAIN_ID = 1004
	// add by caiy
	PB_MAIN_ID_PB_MAIN_FILTER PB_MAIN_ID = 1005
	// add by chenhuahui
	PB_MAIN_ID_PB_MAIN_VIDEO_CHAT PB_MAIN_ID = 1006
	// ��ˮ uc->ftc
	PB_MAIN_ID_PB_MAIN_FLOW PB_MAIN_ID = 1007
	// add by zengsibo �Ƹ��ȼ��ཻ��
	PB_MAIN_ID_PB_MAIN_WEALTH PB_MAIN_ID = 1008
	// add by yuyifei ���ñ���֪ͨ����
	PB_MAIN_ID_PB_MAIN_CONFIGCHANGE PB_MAIN_ID = 1009
	// add by yuyifei ��JAVA֮��Ĵ���
	PB_MAIN_ID_PB_MAIN_PUNISHMENT PB_MAIN_ID = 1010
	// add by chenhuahui �ᱦ��Ϣ
	PB_MAIN_ID_PB_MAIN_LUCKY PB_MAIN_ID = 1011
	// add by caiyu
	PB_MAIN_ID_PB_MAIN_FORTUNE PB_MAIN_ID = 1012
	// add by zengsibo �û�������
	PB_MAIN_ID_PB_MAIN_RESTRICTION PB_MAIN_ID = 1013
	// add by chenhuahui ֱ��֪ͨIM->java
	PB_MAIN_ID_PB_MAIN_LIVE_WEB_NOTIFY PB_MAIN_ID = 1014
	// add by yuyifei JAVA��Ϣ֪ͨ����
	PB_MAIN_ID_PB_MAIN_MSG_NOTIFY PB_MAIN_ID = 1015
	// add by caiyu  ��ˮ���ҵ��
	PB_MAIN_ID_PB_MAIN_FLOW_RELATION PB_MAIN_ID = 1016
	// add by chenhuahui  �û�״̬ҵ��
	PB_MAIN_ID_PB_MAIN_USER_STATE   PB_MAIN_ID = 1017
	PB_MAIN_ID_PB_MAIN_BUSINESS_END PB_MAIN_ID = 10001
	// cpp �ṩ�Ķ�������
	PB_MAIN_ID_PB_MAIN_CPP_BEGIN PB_MAIN_ID = 10000
	PB_MAIN_ID_PB_MAIN_CPP_END   PB_MAIN_ID = 19999
	// java �ṩ�Ķ�������
	PB_MAIN_ID_PB_MAIN_JAVA_BEGIN PB_MAIN_ID = 20000
	PB_MAIN_ID_PB_MAIN_JAVA_END   PB_MAIN_ID = 29999
)

var PB_MAIN_ID_name = map[int32]string{
	0:     "PB_MAIN_SYS_BEGIN",
	1:     "PB_MAIN_COMM",
	2:     "PB_MAIN_LOGON",
	1000:  "PB_MAIN_SYS_END",
	1001:  "PB_MAIN_BUSINESS_BEGIN",
	1002:  "PB_MAIN_RELATIONSHIP",
	1003:  "PB_MAIN_LIVE",
	1004:  "PB_MAIN_USERMODULAR",
	1005:  "PB_MAIN_FILTER",
	1006:  "PB_MAIN_VIDEO_CHAT",
	1007:  "PB_MAIN_FLOW",
	1008:  "PB_MAIN_WEALTH",
	1009:  "PB_MAIN_CONFIGCHANGE",
	1010:  "PB_MAIN_PUNISHMENT",
	1011:  "PB_MAIN_LUCKY",
	1012:  "PB_MAIN_FORTUNE",
	1013:  "PB_MAIN_RESTRICTION",
	1014:  "PB_MAIN_LIVE_WEB_NOTIFY",
	1015:  "PB_MAIN_MSG_NOTIFY",
	1016:  "PB_MAIN_FLOW_RELATION",
	1017:  "PB_MAIN_USER_STATE",
	10001: "PB_MAIN_BUSINESS_END",
	10000: "PB_MAIN_CPP_BEGIN",
	19999: "PB_MAIN_CPP_END",
	20000: "PB_MAIN_JAVA_BEGIN",
	29999: "PB_MAIN_JAVA_END",
}
var PB_MAIN_ID_value = map[string]int32{
	"PB_MAIN_SYS_BEGIN":       0,
	"PB_MAIN_COMM":            1,
	"PB_MAIN_LOGON":           2,
	"PB_MAIN_SYS_END":         1000,
	"PB_MAIN_BUSINESS_BEGIN":  1001,
	"PB_MAIN_RELATIONSHIP":    1002,
	"PB_MAIN_LIVE":            1003,
	"PB_MAIN_USERMODULAR":     1004,
	"PB_MAIN_FILTER":          1005,
	"PB_MAIN_VIDEO_CHAT":      1006,
	"PB_MAIN_FLOW":            1007,
	"PB_MAIN_WEALTH":          1008,
	"PB_MAIN_CONFIGCHANGE":    1009,
	"PB_MAIN_PUNISHMENT":      1010,
	"PB_MAIN_LUCKY":           1011,
	"PB_MAIN_FORTUNE":         1012,
	"PB_MAIN_RESTRICTION":     1013,
	"PB_MAIN_LIVE_WEB_NOTIFY": 1014,
	"PB_MAIN_MSG_NOTIFY":      1015,
	"PB_MAIN_FLOW_RELATION":   1016,
	"PB_MAIN_USER_STATE":      1017,
	"PB_MAIN_BUSINESS_END":    10001,
	"PB_MAIN_CPP_BEGIN":       10000,
	"PB_MAIN_CPP_END":         19999,
	"PB_MAIN_JAVA_BEGIN":      20000,
	"PB_MAIN_JAVA_END":        29999,
}

func (x PB_MAIN_ID) String() string {
	return proto.EnumName(PB_MAIN_ID_name, int32(x))
}
func (PB_MAIN_ID) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func init() {
	proto.RegisterEnum("pb_main_command.PB_MAIN_ID", PB_MAIN_ID_name, PB_MAIN_ID_value)
}

func init() { proto.RegisterFile("main_command.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xcb, 0x72, 0xd3, 0x30,
	0x14, 0x86, 0x09, 0xc3, 0x20, 0xe6, 0x4c, 0xa1, 0x27, 0xa7, 0x49, 0x5a, 0x2e, 0x4f, 0xc0, 0x22,
	0x1b, 0x9e, 0x40, 0x76, 0x64, 0x5b, 0x60, 0x4b, 0x1e, 0x4b, 0x4e, 0x26, 0x6c, 0x34, 0x49, 0xb9,
	0x0c, 0x0b, 0x37, 0x1d, 0x5a, 0x16, 0xbc, 0x05, 0xec, 0x3b, 0x03, 0x6f, 0xc0, 0x6b, 0x41, 0xb9,
	0xdf, 0xe9, 0x8e, 0x71, 0x5b, 0x35, 0xd6, 0xce, 0xfe, 0xfe, 0x73, 0xd1, 0x7f, 0xce, 0x01, 0x6a,
	0x16, 0xcf, 0xf6, 0xdc, 0xee, 0xaa, 0x69, 0x16, 0x7b, 0x8f, 0xc6, 0xfb, 0xcf, 0x57, 0x87, 0x2b,
	0xda, 0xdc, 0x5f, 0xba, 0x2e, 0xbe, 0x7b, 0x72, 0x05, 0xa0, 0x8c, 0x5c, 0xc1, 0xa5, 0x72, 0x72,
	0x42, 0x43, 0xe8, 0xfb, 0x3f, 0x33, 0x37, 0x2e, 0x12, 0xa9, 0x54, 0x78, 0x89, 0x10, 0x36, 0x3c,
	0x8e, 0x75, 0x51, 0x60, 0x8f, 0xfa, 0x70, 0xdd, 0x93, 0x5c, 0xa7, 0x5a, 0xe1, 0x65, 0x1a, 0xc0,
	0x66, 0x37, 0x57, 0xa8, 0x09, 0xbe, 0x67, 0x74, 0x1b, 0x46, 0x9e, 0x46, 0xb5, 0x91, 0x4a, 0x18,
	0x5f, 0xf6, 0x03, 0xa3, 0x9b, 0x30, 0xf0, 0x62, 0x25, 0x72, 0x6e, 0xa5, 0x56, 0x26, 0x93, 0x25,
	0x1e, 0x33, 0xea, 0xaf, 0x5b, 0xe6, 0x72, 0x2a, 0xf0, 0x23, 0xa3, 0x1d, 0xd8, 0xf2, 0xa8, 0x36,
	0xa2, 0x2a, 0xf4, 0xa4, 0xce, 0x79, 0x85, 0x9f, 0x18, 0x6d, 0xc1, 0x0d, 0xaf, 0x24, 0x32, 0xb7,
	0xa2, 0xc2, 0xcf, 0x8c, 0xb6, 0x81, 0x3c, 0x9c, 0xca, 0x89, 0xd0, 0x2e, 0xce, 0xb8, 0xc5, 0x2f,
	0x41, 0xe9, 0x24, 0xd7, 0x33, 0xfc, 0x1a, 0x14, 0x98, 0x09, 0x9e, 0xdb, 0x0c, 0xbf, 0x05, 0xaf,
	0x8b, 0xb5, 0x4a, 0x64, 0x1a, 0x67, 0x5c, 0xa5, 0x02, 0xbf, 0x07, 0xb5, 0xcb, 0x5a, 0x49, 0x93,
	0x15, 0x42, 0x59, 0xfc, 0xc1, 0x88, 0x3a, 0x73, 0xa9, 0xe3, 0x07, 0x73, 0xfc, 0xc9, 0xba, 0x83,
	0x49, 0x74, 0x65, 0x6b, 0x25, 0xf0, 0x57, 0xe0, 0xa6, 0x12, 0xc6, 0x56, 0x32, 0x6e, 0xed, 0xe3,
	0x6f, 0x46, 0x77, 0x60, 0xbb, 0x6b, 0xdd, 0xcd, 0x44, 0xe4, 0x94, 0xb6, 0x32, 0x99, 0xe3, 0x9f,
	0xa0, 0x75, 0x61, 0x52, 0x2f, 0xfc, 0x65, 0x74, 0x0b, 0x86, 0x5d, 0x5b, 0x17, 0x13, 0xc5, 0x7f,
	0x41, 0x52, 0x3b, 0x3a, 0x67, 0x2c, 0xb7, 0x02, 0x4f, 0x02, 0x8f, 0x17, 0xeb, 0x69, 0x37, 0xf7,
	0x5a, 0xd1, 0x68, 0x7d, 0x0b, 0x71, 0x59, 0x9e, 0x2f, 0xed, 0x95, 0xa2, 0xe1, 0xda, 0x4e, 0xcb,
	0xdb, 0xe8, 0x37, 0x47, 0x3d, 0xda, 0x59, 0xb7, 0xb8, 0xcf, 0xa7, 0xfc, 0x3c, 0xfe, 0xed, 0x51,
	0x8f, 0x46, 0x80, 0x81, 0xd2, 0x66, 0xbc, 0x3b, 0xee, 0x45, 0x63, 0x18, 0xec, 0xae, 0x9a, 0xf1,
	0xcb, 0xc3, 0xb3, 0xe3, 0x5c, 0xbe, 0x78, 0x32, 0x5e, 0x2e, 0x0e, 0x1e, 0x47, 0x1b, 0xf1, 0xd9,
	0x71, 0x96, 0x2d, 0x7d, 0x78, 0xed, 0x54, 0x6c, 0x0e, 0x9e, 0x2e, 0xaf, 0x9e, 0x7e, 0xdd, 0xfb,
	0x1f, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xea, 0x71, 0xed, 0xd9, 0x02, 0x00, 0x00,
}
