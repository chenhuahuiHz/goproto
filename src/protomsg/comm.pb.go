// Code generated by protoc-gen-go. DO NOT EDIT.
// source: comm.proto

/*
Package protomsg is a generated protocol buffer package.

It is generated from these files:
	comm.proto
	main_command.proto

It has these top-level messages:
	PBHeartBeat
	PBCommACK
	PBCommANK
	PBCommUserInfo
	PBCommUserInforChangeNotify
	PBWsHeartBeat
	PBIMComNotify
*/
package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 主IDPB_MAIN_COMM = 1;// 通用消息
// 子ID定义
type PB_SUB_COMM int32

const (
	PB_SUB_COMM_PB_SUB_COMM_HEART_BEAT       PB_SUB_COMM = 0
	PB_SUB_COMM_PB_SUB_COMM_ACK              PB_SUB_COMM = 1
	PB_SUB_COMM_PB_SUB_COMM_ANK              PB_SUB_COMM = 2
	PB_SUB_COMM_PB_SUB_COMM_USER_INFO_CHANGE PB_SUB_COMM = 3
	PB_SUB_COMM_PB_SUB_WS_HEART_BEAT         PB_SUB_COMM = 4
	PB_SUB_COMM_PB_SUB_COMM_NOTIFY           PB_SUB_COMM = 10
)

var PB_SUB_COMM_name = map[int32]string{
	0:  "PB_SUB_COMM_HEART_BEAT",
	1:  "PB_SUB_COMM_ACK",
	2:  "PB_SUB_COMM_ANK",
	3:  "PB_SUB_COMM_USER_INFO_CHANGE",
	4:  "PB_SUB_WS_HEART_BEAT",
	10: "PB_SUB_COMM_NOTIFY",
}
var PB_SUB_COMM_value = map[string]int32{
	"PB_SUB_COMM_HEART_BEAT":       0,
	"PB_SUB_COMM_ACK":              1,
	"PB_SUB_COMM_ANK":              2,
	"PB_SUB_COMM_USER_INFO_CHANGE": 3,
	"PB_SUB_WS_HEART_BEAT":         4,
	"PB_SUB_COMM_NOTIFY":           10,
}

func (x PB_SUB_COMM) String() string {
	return proto.EnumName(PB_SUB_COMM_name, int32(x))
}
func (PB_SUB_COMM) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 针对心跳加一个状态的值，初始为0，回复为12
type PB_EN_MSG_PROCESS_STEP int32

const (
	PB_EN_MSG_PROCESS_STEP_EN_MSG_PROCESS_STEP_INIT PB_EN_MSG_PROCESS_STEP = 0
	PB_EN_MSG_PROCESS_STEP_EN_MSG_PROCESS_STEP_SYNC PB_EN_MSG_PROCESS_STEP = 12
)

var PB_EN_MSG_PROCESS_STEP_name = map[int32]string{
	0:  "EN_MSG_PROCESS_STEP_INIT",
	12: "EN_MSG_PROCESS_STEP_SYNC",
}
var PB_EN_MSG_PROCESS_STEP_value = map[string]int32{
	"EN_MSG_PROCESS_STEP_INIT": 0,
	"EN_MSG_PROCESS_STEP_SYNC": 12,
}

func (x PB_EN_MSG_PROCESS_STEP) String() string {
	return proto.EnumName(PB_EN_MSG_PROCESS_STEP_name, int32(x))
}
func (PB_EN_MSG_PROCESS_STEP) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// [START messages]
// 1,0
type PBHeartBeat struct {
	ICurStep int32 `protobuf:"varint,1,opt,name=iCurStep" json:"iCurStep,omitempty"`
}

func (m *PBHeartBeat) Reset()                    { *m = PBHeartBeat{} }
func (m *PBHeartBeat) String() string            { return proto.CompactTextString(m) }
func (*PBHeartBeat) ProtoMessage()               {}
func (*PBHeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PBHeartBeat) GetICurStep() int32 {
	if m != nil {
		return m.ICurStep
	}
	return 0
}

// 1,1  针对某个消息的成功回应
type PBCommACK struct {
	WMainCmdID int32  `protobuf:"varint,1,opt,name=wMainCmdID" json:"wMainCmdID,omitempty"`
	WSubCmdID  int32  `protobuf:"varint,2,opt,name=wSubCmdID" json:"wSubCmdID,omitempty"`
	DwExp      uint32 `protobuf:"varint,3,opt,name=dwExp" json:"dwExp,omitempty"`
}

func (m *PBCommACK) Reset()                    { *m = PBCommACK{} }
func (m *PBCommACK) String() string            { return proto.CompactTextString(m) }
func (*PBCommACK) ProtoMessage()               {}
func (*PBCommACK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PBCommACK) GetWMainCmdID() int32 {
	if m != nil {
		return m.WMainCmdID
	}
	return 0
}

func (m *PBCommACK) GetWSubCmdID() int32 {
	if m != nil {
		return m.WSubCmdID
	}
	return 0
}

func (m *PBCommACK) GetDwExp() uint32 {
	if m != nil {
		return m.DwExp
	}
	return 0
}

// 1,2  针对某个消息的失败回应
type PBCommANK struct {
	WMainCmdID int32  `protobuf:"varint,1,opt,name=wMainCmdID" json:"wMainCmdID,omitempty"`
	WSubCmdID  int32  `protobuf:"varint,2,opt,name=wSubCmdID" json:"wSubCmdID,omitempty"`
	DwExp      uint32 `protobuf:"varint,3,opt,name=dwExp" json:"dwExp,omitempty"`
	DwErrCode  uint32 `protobuf:"varint,4,opt,name=dwErrCode" json:"dwErrCode,omitempty"`
}

func (m *PBCommANK) Reset()                    { *m = PBCommANK{} }
func (m *PBCommANK) String() string            { return proto.CompactTextString(m) }
func (*PBCommANK) ProtoMessage()               {}
func (*PBCommANK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PBCommANK) GetWMainCmdID() int32 {
	if m != nil {
		return m.WMainCmdID
	}
	return 0
}

func (m *PBCommANK) GetWSubCmdID() int32 {
	if m != nil {
		return m.WSubCmdID
	}
	return 0
}

func (m *PBCommANK) GetDwExp() uint32 {
	if m != nil {
		return m.DwExp
	}
	return 0
}

func (m *PBCommANK) GetDwErrCode() uint32 {
	if m != nil {
		return m.DwErrCode
	}
	return 0
}

// 用户信息结构，用于复用
type PBCommUserInfo struct {
	DwUserID     uint32 `protobuf:"varint,1,opt,name=dwUserID" json:"dwUserID,omitempty"`
	SzName       string `protobuf:"bytes,2,opt,name=szName" json:"szName,omitempty"`
	SzPasswd     string `protobuf:"bytes,3,opt,name=szPasswd" json:"szPasswd,omitempty"`
	SzNicName    string `protobuf:"bytes,4,opt,name=szNicName" json:"szNicName,omitempty"`
	SzUserPic    string `protobuf:"bytes,5,opt,name=szUserPic" json:"szUserPic,omitempty"`
	BtSex        int32  `protobuf:"varint,6,opt,name=btSex" json:"btSex,omitempty"`
	BtStatus     int32  `protobuf:"varint,7,opt,name=btStatus" json:"btStatus,omitempty"`
	BtRenZhen    int32  `protobuf:"varint,8,opt,name=btRenZhen" json:"btRenZhen,omitempty"`
	DwCreateTime uint32 `protobuf:"varint,9,opt,name=dwCreateTime" json:"dwCreateTime,omitempty"`
	DwUpdateTime uint32 `protobuf:"varint,10,opt,name=dwUpdateTime" json:"dwUpdateTime,omitempty"`
	// t_user_expand
	LlEnergyCounts  int64  `protobuf:"varint,11,opt,name=llEnergyCounts" json:"llEnergyCounts,omitempty"`
	LlInteralCounts int64  `protobuf:"varint,12,opt,name=llInteralCounts" json:"llInteralCounts,omitempty"`
	WVersion        uint32 `protobuf:"varint,13,opt,name=wVersion" json:"wVersion,omitempty"`
	LlLockInteral   int64  `protobuf:"varint,14,opt,name=llLockInteral" json:"llLockInteral,omitempty"`
	// t_statist
	LlEnergy_1    int64  `protobuf:"varint,15,opt,name=llEnergy_1,json=llEnergy1" json:"llEnergy_1,omitempty"`
	LlEnergy_2    int64  `protobuf:"varint,16,opt,name=llEnergy_2,json=llEnergy2" json:"llEnergy_2,omitempty"`
	LlEnergy_3    int64  `protobuf:"varint,17,opt,name=llEnergy_3,json=llEnergy3" json:"llEnergy_3,omitempty"`
	LlEnergy_Max  int64  `protobuf:"varint,18,opt,name=llEnergy_Max,json=llEnergyMax" json:"llEnergy_Max,omitempty"`
	LlInteral_1   int64  `protobuf:"varint,19,opt,name=llInteral_1,json=llInteral1" json:"llInteral_1,omitempty"`
	LlInteral_2   int64  `protobuf:"varint,20,opt,name=llInteral_2,json=llInteral2" json:"llInteral_2,omitempty"`
	LlInteral_3   int64  `protobuf:"varint,21,opt,name=llInteral_3,json=llInteral3" json:"llInteral_3,omitempty"`
	LlInteral_Max int64  `protobuf:"varint,22,opt,name=llInteral_Max,json=llInteralMax" json:"llInteral_Max,omitempty"`
	DwEnergyLev   uint32 `protobuf:"varint,23,opt,name=dwEnergyLev" json:"dwEnergyLev,omitempty"`
	DwInteralLev  uint32 `protobuf:"varint,24,opt,name=dwInteralLev" json:"dwInteralLev,omitempty"`
	DwRedLev      uint32 `protobuf:"varint,25,opt,name=dwRedLev" json:"dwRedLev,omitempty"`
	DwYellowLev   uint32 `protobuf:"varint,26,opt,name=dwYellowLev" json:"dwYellowLev,omitempty"`
	DwRedStars    uint32 `protobuf:"varint,27,opt,name=dwRedStars" json:"dwRedStars,omitempty"`
	DwYelloStars  uint32 `protobuf:"varint,28,opt,name=dwYelloStars" json:"dwYelloStars,omitempty"`
	WCustomAccout uint32 `protobuf:"varint,29,opt,name=wCustomAccout" json:"wCustomAccout,omitempty"`
	WVip          uint32 `protobuf:"varint,30,opt,name=wVip" json:"wVip,omitempty"`
	// 添加用户的经度与纬度
	DLongiTude     float64 `protobuf:"fixed64,31,opt,name=dLongiTude" json:"dLongiTude,omitempty"`
	DLatitude      float64 `protobuf:"fixed64,32,opt,name=dLatitude" json:"dLatitude,omitempty"`
	DwBirthDay     uint32  `protobuf:"varint,33,opt,name=dwBirthDay" json:"dwBirthDay,omitempty"`
	DwLastSn       uint32  `protobuf:"varint,34,opt,name=dwLastSn" json:"dwLastSn,omitempty"`
	DwPriPicLevel  uint32  `protobuf:"varint,35,opt,name=dwPriPicLevel" json:"dwPriPicLevel,omitempty"`
	DwPriPicCounts uint32  `protobuf:"varint,36,opt,name=dwPriPicCounts" json:"dwPriPicCounts,omitempty"`
	// 以下二个字段是通过三日的值比较出来的
	LlEnergyValue   int64 `protobuf:"varint,37,opt,name=llEnergyValue" json:"llEnergyValue,omitempty"`
	LlIntegralValue int64 `protobuf:"varint,38,opt,name=llIntegralValue" json:"llIntegralValue,omitempty"`
	// 以下二个字段在数据库中没有，他分别对应该用户个人主页中的魅力等级及VIP等级（财气等级）三天比较下面的魅力值M,财气值V 的值，上面的财气等级，魅力等级分别
	// 页面下面的几个等级的最小值
	DwEnergyValueLev   uint32 `protobuf:"varint,39,opt,name=dwEnergyValueLev" json:"dwEnergyValueLev,omitempty"`
	DwIntegralValueLev uint32 `protobuf:"varint,40,opt,name=dwIntegralValueLev" json:"dwIntegralValueLev,omitempty"`
	// 冗余 能量等级 界面要显示 t_statist  ->energycounts_lev
	DwEnergyCountsLev uint32 `protobuf:"varint,41,opt,name=dwEnergyCountsLev" json:"dwEnergyCountsLev,omitempty"`
	// 用户的充值总额
	DRechargeValue float64 `protobuf:"fixed64,42,opt,name=dRechargeValue" json:"dRechargeValue,omitempty"`
}

func (m *PBCommUserInfo) Reset()                    { *m = PBCommUserInfo{} }
func (m *PBCommUserInfo) String() string            { return proto.CompactTextString(m) }
func (*PBCommUserInfo) ProtoMessage()               {}
func (*PBCommUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PBCommUserInfo) GetDwUserID() uint32 {
	if m != nil {
		return m.DwUserID
	}
	return 0
}

func (m *PBCommUserInfo) GetSzName() string {
	if m != nil {
		return m.SzName
	}
	return ""
}

func (m *PBCommUserInfo) GetSzPasswd() string {
	if m != nil {
		return m.SzPasswd
	}
	return ""
}

func (m *PBCommUserInfo) GetSzNicName() string {
	if m != nil {
		return m.SzNicName
	}
	return ""
}

func (m *PBCommUserInfo) GetSzUserPic() string {
	if m != nil {
		return m.SzUserPic
	}
	return ""
}

func (m *PBCommUserInfo) GetBtSex() int32 {
	if m != nil {
		return m.BtSex
	}
	return 0
}

func (m *PBCommUserInfo) GetBtStatus() int32 {
	if m != nil {
		return m.BtStatus
	}
	return 0
}

func (m *PBCommUserInfo) GetBtRenZhen() int32 {
	if m != nil {
		return m.BtRenZhen
	}
	return 0
}

func (m *PBCommUserInfo) GetDwCreateTime() uint32 {
	if m != nil {
		return m.DwCreateTime
	}
	return 0
}

func (m *PBCommUserInfo) GetDwUpdateTime() uint32 {
	if m != nil {
		return m.DwUpdateTime
	}
	return 0
}

func (m *PBCommUserInfo) GetLlEnergyCounts() int64 {
	if m != nil {
		return m.LlEnergyCounts
	}
	return 0
}

func (m *PBCommUserInfo) GetLlInteralCounts() int64 {
	if m != nil {
		return m.LlInteralCounts
	}
	return 0
}

func (m *PBCommUserInfo) GetWVersion() uint32 {
	if m != nil {
		return m.WVersion
	}
	return 0
}

func (m *PBCommUserInfo) GetLlLockInteral() int64 {
	if m != nil {
		return m.LlLockInteral
	}
	return 0
}

func (m *PBCommUserInfo) GetLlEnergy_1() int64 {
	if m != nil {
		return m.LlEnergy_1
	}
	return 0
}

func (m *PBCommUserInfo) GetLlEnergy_2() int64 {
	if m != nil {
		return m.LlEnergy_2
	}
	return 0
}

func (m *PBCommUserInfo) GetLlEnergy_3() int64 {
	if m != nil {
		return m.LlEnergy_3
	}
	return 0
}

func (m *PBCommUserInfo) GetLlEnergy_Max() int64 {
	if m != nil {
		return m.LlEnergy_Max
	}
	return 0
}

func (m *PBCommUserInfo) GetLlInteral_1() int64 {
	if m != nil {
		return m.LlInteral_1
	}
	return 0
}

func (m *PBCommUserInfo) GetLlInteral_2() int64 {
	if m != nil {
		return m.LlInteral_2
	}
	return 0
}

func (m *PBCommUserInfo) GetLlInteral_3() int64 {
	if m != nil {
		return m.LlInteral_3
	}
	return 0
}

func (m *PBCommUserInfo) GetLlInteral_Max() int64 {
	if m != nil {
		return m.LlInteral_Max
	}
	return 0
}

func (m *PBCommUserInfo) GetDwEnergyLev() uint32 {
	if m != nil {
		return m.DwEnergyLev
	}
	return 0
}

func (m *PBCommUserInfo) GetDwInteralLev() uint32 {
	if m != nil {
		return m.DwInteralLev
	}
	return 0
}

func (m *PBCommUserInfo) GetDwRedLev() uint32 {
	if m != nil {
		return m.DwRedLev
	}
	return 0
}

func (m *PBCommUserInfo) GetDwYellowLev() uint32 {
	if m != nil {
		return m.DwYellowLev
	}
	return 0
}

func (m *PBCommUserInfo) GetDwRedStars() uint32 {
	if m != nil {
		return m.DwRedStars
	}
	return 0
}

func (m *PBCommUserInfo) GetDwYelloStars() uint32 {
	if m != nil {
		return m.DwYelloStars
	}
	return 0
}

func (m *PBCommUserInfo) GetWCustomAccout() uint32 {
	if m != nil {
		return m.WCustomAccout
	}
	return 0
}

func (m *PBCommUserInfo) GetWVip() uint32 {
	if m != nil {
		return m.WVip
	}
	return 0
}

func (m *PBCommUserInfo) GetDLongiTude() float64 {
	if m != nil {
		return m.DLongiTude
	}
	return 0
}

func (m *PBCommUserInfo) GetDLatitude() float64 {
	if m != nil {
		return m.DLatitude
	}
	return 0
}

func (m *PBCommUserInfo) GetDwBirthDay() uint32 {
	if m != nil {
		return m.DwBirthDay
	}
	return 0
}

func (m *PBCommUserInfo) GetDwLastSn() uint32 {
	if m != nil {
		return m.DwLastSn
	}
	return 0
}

func (m *PBCommUserInfo) GetDwPriPicLevel() uint32 {
	if m != nil {
		return m.DwPriPicLevel
	}
	return 0
}

func (m *PBCommUserInfo) GetDwPriPicCounts() uint32 {
	if m != nil {
		return m.DwPriPicCounts
	}
	return 0
}

func (m *PBCommUserInfo) GetLlEnergyValue() int64 {
	if m != nil {
		return m.LlEnergyValue
	}
	return 0
}

func (m *PBCommUserInfo) GetLlIntegralValue() int64 {
	if m != nil {
		return m.LlIntegralValue
	}
	return 0
}

func (m *PBCommUserInfo) GetDwEnergyValueLev() uint32 {
	if m != nil {
		return m.DwEnergyValueLev
	}
	return 0
}

func (m *PBCommUserInfo) GetDwIntegralValueLev() uint32 {
	if m != nil {
		return m.DwIntegralValueLev
	}
	return 0
}

func (m *PBCommUserInfo) GetDwEnergyCountsLev() uint32 {
	if m != nil {
		return m.DwEnergyCountsLev
	}
	return 0
}

func (m *PBCommUserInfo) GetDRechargeValue() float64 {
	if m != nil {
		return m.DRechargeValue
	}
	return 0
}

// 1,3
type PBCommUserInforChangeNotify struct {
	DwUserId             uint32 `protobuf:"varint,1,opt,name=dwUserId" json:"dwUserId,omitempty"`
	DwRelativeUserId     uint32 `protobuf:"varint,2,opt,name=dwRelativeUserId" json:"dwRelativeUserId,omitempty"`
	LlEneryCounts        int64  `protobuf:"varint,3,opt,name=llEneryCounts" json:"llEneryCounts,omitempty"`
	LlIntegralCounts     int64  `protobuf:"varint,4,opt,name=llIntegralCounts" json:"llIntegralCounts,omitempty"`
	LlGiveEnergyCounts   int64  `protobuf:"varint,5,opt,name=llGiveEnergyCounts" json:"llGiveEnergyCounts,omitempty"`
	LlGiveIntegralCounts int64  `protobuf:"varint,6,opt,name=llGiveIntegralCounts" json:"llGiveIntegralCounts,omitempty"`
	LlGiveChangeEnValue  int64  `protobuf:"varint,7,opt,name=llGiveChangeEnValue" json:"llGiveChangeEnValue,omitempty"`
	LlGiveChangeInValue  int64  `protobuf:"varint,8,opt,name=llGiveChangeInValue" json:"llGiveChangeInValue,omitempty"`
	// 新增二个字段代表增量，有可能正负
	LlChangeEnergyValue   int64 `protobuf:"varint,9,opt,name=llChangeEnergyValue" json:"llChangeEnergyValue,omitempty"`
	LlChangeIntegralValue int64 `protobuf:"varint,10,opt,name=llChangeIntegralValue" json:"llChangeIntegralValue,omitempty"`
	// 再增加二个字段
	IChangeType int32 `protobuf:"varint,11,opt,name=iChangeType" json:"iChangeType,omitempty"`
	IReason     int32 `protobuf:"varint,12,opt,name=iReason" json:"iReason,omitempty"`
}

func (m *PBCommUserInforChangeNotify) Reset()                    { *m = PBCommUserInforChangeNotify{} }
func (m *PBCommUserInforChangeNotify) String() string            { return proto.CompactTextString(m) }
func (*PBCommUserInforChangeNotify) ProtoMessage()               {}
func (*PBCommUserInforChangeNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PBCommUserInforChangeNotify) GetDwUserId() uint32 {
	if m != nil {
		return m.DwUserId
	}
	return 0
}

func (m *PBCommUserInforChangeNotify) GetDwRelativeUserId() uint32 {
	if m != nil {
		return m.DwRelativeUserId
	}
	return 0
}

func (m *PBCommUserInforChangeNotify) GetLlEneryCounts() int64 {
	if m != nil {
		return m.LlEneryCounts
	}
	return 0
}

func (m *PBCommUserInforChangeNotify) GetLlIntegralCounts() int64 {
	if m != nil {
		return m.LlIntegralCounts
	}
	return 0
}

func (m *PBCommUserInforChangeNotify) GetLlGiveEnergyCounts() int64 {
	if m != nil {
		return m.LlGiveEnergyCounts
	}
	return 0
}

func (m *PBCommUserInforChangeNotify) GetLlGiveIntegralCounts() int64 {
	if m != nil {
		return m.LlGiveIntegralCounts
	}
	return 0
}

func (m *PBCommUserInforChangeNotify) GetLlGiveChangeEnValue() int64 {
	if m != nil {
		return m.LlGiveChangeEnValue
	}
	return 0
}

func (m *PBCommUserInforChangeNotify) GetLlGiveChangeInValue() int64 {
	if m != nil {
		return m.LlGiveChangeInValue
	}
	return 0
}

func (m *PBCommUserInforChangeNotify) GetLlChangeEnergyValue() int64 {
	if m != nil {
		return m.LlChangeEnergyValue
	}
	return 0
}

func (m *PBCommUserInforChangeNotify) GetLlChangeIntegralValue() int64 {
	if m != nil {
		return m.LlChangeIntegralValue
	}
	return 0
}

func (m *PBCommUserInforChangeNotify) GetIChangeType() int32 {
	if m != nil {
		return m.IChangeType
	}
	return 0
}

func (m *PBCommUserInforChangeNotify) GetIReason() int32 {
	if m != nil {
		return m.IReason
	}
	return 0
}

type PBWsHeartBeat struct {
	ICurStep int32 `protobuf:"varint,1,opt,name=iCurStep" json:"iCurStep,omitempty"`
}

func (m *PBWsHeartBeat) Reset()                    { *m = PBWsHeartBeat{} }
func (m *PBWsHeartBeat) String() string            { return proto.CompactTextString(m) }
func (*PBWsHeartBeat) ProtoMessage()               {}
func (*PBWsHeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PBWsHeartBeat) GetICurStep() int32 {
	if m != nil {
		return m.ICurStep
	}
	return 0
}

type PBIMComNotify struct {
	AimId    uint32 `protobuf:"varint,1,opt,name=aim_id,json=aimId" json:"aim_id,omitempty"`
	AimType  int32  `protobuf:"varint,2,opt,name=aim_type,json=aimType" json:"aim_type,omitempty"`
	OptType  int32  `protobuf:"varint,3,opt,name=opt_type,json=optType" json:"opt_type,omitempty"`
	ShowType int32  `protobuf:"varint,4,opt,name=show_type,json=showType" json:"show_type,omitempty"`
	Content  string `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
}

func (m *PBIMComNotify) Reset()                    { *m = PBIMComNotify{} }
func (m *PBIMComNotify) String() string            { return proto.CompactTextString(m) }
func (*PBIMComNotify) ProtoMessage()               {}
func (*PBIMComNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PBIMComNotify) GetAimId() uint32 {
	if m != nil {
		return m.AimId
	}
	return 0
}

func (m *PBIMComNotify) GetAimType() int32 {
	if m != nil {
		return m.AimType
	}
	return 0
}

func (m *PBIMComNotify) GetOptType() int32 {
	if m != nil {
		return m.OptType
	}
	return 0
}

func (m *PBIMComNotify) GetShowType() int32 {
	if m != nil {
		return m.ShowType
	}
	return 0
}

func (m *PBIMComNotify) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*PBHeartBeat)(nil), "pb_comm.PBHeartBeat")
	proto.RegisterType((*PBCommACK)(nil), "pb_comm.PBCommACK")
	proto.RegisterType((*PBCommANK)(nil), "pb_comm.PBCommANK")
	proto.RegisterType((*PBCommUserInfo)(nil), "pb_comm.PBCommUserInfo")
	proto.RegisterType((*PBCommUserInforChangeNotify)(nil), "pb_comm.PBCommUserInforChangeNotify")
	proto.RegisterType((*PBWsHeartBeat)(nil), "pb_comm.PBWsHeartBeat")
	proto.RegisterType((*PBIMComNotify)(nil), "pb_comm.PBIMComNotify")
	proto.RegisterEnum("pb_comm.PB_SUB_COMM", PB_SUB_COMM_name, PB_SUB_COMM_value)
	proto.RegisterEnum("pb_comm.PB_EN_MSG_PROCESS_STEP", PB_EN_MSG_PROCESS_STEP_name, PB_EN_MSG_PROCESS_STEP_value)
}

func init() { proto.RegisterFile("comm.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x96, 0x5d, 0x73, 0xda, 0x46,
	0x17, 0xc7, 0x1f, 0x62, 0xb0, 0xe1, 0x60, 0xc7, 0x64, 0xfd, 0xf2, 0xac, 0x5f, 0x92, 0x10, 0x92,
	0xa6, 0xc4, 0xe9, 0x78, 0x6a, 0xbb, 0x5f, 0x00, 0x14, 0x62, 0x33, 0x06, 0xcc, 0x48, 0xd8, 0x19,
	0xe7, 0x46, 0xb3, 0xa0, 0x35, 0xd6, 0x54, 0x2f, 0x8c, 0xb4, 0x58, 0xb6, 0x67, 0xfa, 0x29, 0x7a,
	0xdb, 0xbb, 0x5e, 0xf4, 0x6b, 0x76, 0x76, 0x57, 0x2b, 0x24, 0xa0, 0x33, 0xbd, 0xe9, 0x1d, 0xe7,
	0xf7, 0xff, 0x1f, 0x9d, 0xb3, 0x47, 0xbb, 0x8b, 0x00, 0x46, 0xbe, 0xeb, 0x1e, 0x4f, 0x02, 0x9f,
	0xf9, 0x68, 0x6d, 0x32, 0x34, 0x79, 0x58, 0xfb, 0x04, 0xe5, 0x7e, 0xf3, 0x82, 0x92, 0x80, 0x35,
	0x29, 0x61, 0x68, 0x1f, 0x8a, 0xb6, 0x36, 0x0d, 0x0c, 0x46, 0x27, 0x38, 0x57, 0xcd, 0xd5, 0x0b,
	0x7a, 0x12, 0xd7, 0x4c, 0x28, 0xf5, 0x9b, 0x9a, 0xef, 0xba, 0x0d, 0xed, 0x12, 0xbd, 0x01, 0x88,
	0xba, 0xc4, 0xf6, 0x34, 0xd7, 0x6a, 0x7f, 0x89, 0xad, 0x29, 0x82, 0x0e, 0xa1, 0x14, 0x19, 0xd3,
	0xa1, 0x94, 0x5f, 0x08, 0x79, 0x06, 0xd0, 0x36, 0x14, 0xac, 0xa8, 0xf5, 0x38, 0xc1, 0x2b, 0xd5,
	0x5c, 0x7d, 0x43, 0x97, 0x41, 0xed, 0xb7, 0xa4, 0x40, 0xef, 0x3f, 0x29, 0xc0, 0x73, 0xac, 0xa8,
	0x15, 0x04, 0x9a, 0x6f, 0x51, 0x9c, 0x17, 0xca, 0x0c, 0xd4, 0xfe, 0x28, 0xc3, 0x4b, 0x59, 0xff,
	0x3a, 0xa4, 0x41, 0xdb, 0xbb, 0xf3, 0xf9, 0x38, 0xac, 0x48, 0x44, 0xb2, 0x85, 0x0d, 0x3d, 0x89,
	0xd1, 0x2e, 0xac, 0x86, 0xcf, 0x3d, 0xe2, 0x52, 0x51, 0xbd, 0xa4, 0xc7, 0x11, 0xcf, 0x09, 0x9f,
	0xfb, 0x24, 0x0c, 0x23, 0x4b, 0x54, 0x2f, 0xe9, 0x49, 0xcc, 0x1b, 0x08, 0x9f, 0x7b, 0xf6, 0x48,
	0xa4, 0xe5, 0x85, 0x38, 0x03, 0x52, 0xe5, 0x4f, 0xef, 0xdb, 0x23, 0x5c, 0x50, 0x6a, 0x0c, 0xf8,
	0x92, 0x86, 0xcc, 0xa0, 0x8f, 0x78, 0x55, 0x2c, 0x56, 0x06, 0xbc, 0xda, 0x90, 0x19, 0x8c, 0xb0,
	0x69, 0x88, 0xd7, 0xe4, 0x0b, 0x53, 0x31, 0x7f, 0xde, 0x90, 0xe9, 0xd4, 0xfb, 0x7e, 0x4f, 0x3d,
	0x5c, 0x94, 0x23, 0x4a, 0x00, 0xaa, 0xc1, 0xba, 0x15, 0x69, 0x01, 0x25, 0x8c, 0x0e, 0x6c, 0x97,
	0xe2, 0x92, 0x58, 0x5f, 0x86, 0x49, 0xcf, 0xf5, 0xc4, 0x52, 0x1e, 0x50, 0x9e, 0x19, 0x43, 0x1f,
	0xe1, 0xa5, 0xe3, 0xb4, 0x3c, 0x1a, 0x8c, 0x9f, 0x34, 0x7f, 0xea, 0xb1, 0x10, 0x97, 0xab, 0xb9,
	0xfa, 0x8a, 0x3e, 0x47, 0x51, 0x1d, 0x36, 0x1d, 0xa7, 0xed, 0x31, 0x1a, 0x10, 0x27, 0x36, 0xae,
	0x0b, 0xe3, 0x3c, 0xe6, 0x6b, 0x8a, 0x6e, 0x68, 0x10, 0xda, 0xbe, 0x87, 0x37, 0xe4, 0xd4, 0x55,
	0x8c, 0x3e, 0xc0, 0x86, 0xe3, 0x74, 0xfc, 0xd1, 0xaf, 0x71, 0x0a, 0x7e, 0x29, 0x9e, 0x91, 0x85,
	0xe8, 0x35, 0x80, 0xaa, 0x6e, 0x9e, 0xe0, 0x4d, 0x61, 0x29, 0x29, 0x72, 0x92, 0x91, 0x4f, 0x71,
	0x25, 0x2b, 0x9f, 0x66, 0xe4, 0x33, 0xfc, 0x2a, 0x2b, 0x9f, 0xa1, 0x77, 0xb0, 0x9e, 0xc8, 0x5d,
	0xf2, 0x88, 0x91, 0x30, 0x94, 0x15, 0xeb, 0x92, 0x47, 0xf4, 0x16, 0xca, 0xc9, 0xa2, 0xcc, 0x13,
	0xbc, 0x25, 0x1c, 0x90, 0xa0, 0x93, 0xac, 0xe1, 0x14, 0x6f, 0xcf, 0x19, 0x4e, 0xb3, 0x86, 0x33,
	0xbc, 0x33, 0x67, 0x38, 0x43, 0xef, 0xf9, 0x20, 0x94, 0x81, 0xb7, 0xb1, 0x2b, 0x2c, 0xeb, 0x09,
	0xe4, 0x7d, 0x54, 0xa1, 0x6c, 0x45, 0xb2, 0xad, 0x0e, 0x7d, 0xc0, 0xff, 0x17, 0xc3, 0x4c, 0x23,
	0xf9, 0x86, 0xe3, 0x0c, 0x6e, 0xc1, 0xea, 0x0d, 0xcf, 0x98, 0x3c, 0x05, 0x3a, 0xb5, 0xb8, 0xbe,
	0xa7, 0x4e, 0x81, 0x8c, 0x65, 0x85, 0x5b, 0xea, 0x38, 0x7e, 0xc4, 0xe5, 0x7d, 0x55, 0x21, 0x41,
	0xfc, 0x20, 0x0b, 0xb7, 0xc1, 0x48, 0x10, 0xe2, 0x03, 0x61, 0x48, 0x11, 0xd9, 0x81, 0xb0, 0x4b,
	0xc7, 0xa1, 0xea, 0x60, 0xc6, 0xf8, 0x5b, 0x8f, 0xb4, 0x69, 0xc8, 0x7c, 0xb7, 0x31, 0x1a, 0xf9,
	0x53, 0x86, 0x5f, 0x0b, 0x53, 0x16, 0x22, 0x04, 0xf9, 0xe8, 0xc6, 0x9e, 0xe0, 0x37, 0x42, 0x14,
	0xbf, 0x45, 0xf5, 0x8e, 0xef, 0x8d, 0xed, 0xc1, 0xd4, 0xa2, 0xf8, 0x6d, 0x35, 0x57, 0xcf, 0xe9,
	0x29, 0x22, 0xae, 0x84, 0x0e, 0x61, 0x36, 0xe3, 0x72, 0x55, 0xc8, 0x33, 0x20, 0x7b, 0x6f, 0xda,
	0x01, 0xbb, 0xff, 0x42, 0x9e, 0xf0, 0x3b, 0xd5, 0xbb, 0x22, 0x72, 0x32, 0x1d, 0x12, 0x32, 0xc3,
	0xc3, 0x35, 0x35, 0x19, 0x19, 0xf3, 0x9e, 0xad, 0xa8, 0x1f, 0xd8, 0x7d, 0x7b, 0xd4, 0xa1, 0x0f,
	0xd4, 0xc1, 0xef, 0x65, 0xcf, 0x19, 0xc8, 0x4f, 0x8f, 0x02, 0xf1, 0xa1, 0xf8, 0x20, 0x6c, 0x73,
	0x54, 0xee, 0x7b, 0xf9, 0xda, 0x6e, 0x88, 0x33, 0xa5, 0xf8, 0x07, 0xb5, 0xef, 0x53, 0x70, 0x76,
	0xc6, 0xc6, 0x01, 0x71, 0xa4, 0xef, 0x63, 0xfa, 0x8c, 0x25, 0x18, 0x1d, 0x41, 0x45, 0x6d, 0x03,
	0x01, 0xf8, 0xcb, 0xfb, 0x51, 0x54, 0x5e, 0xe0, 0xe8, 0x18, 0x90, 0xdc, 0x0f, 0x49, 0x3a, 0x77,
	0xd7, 0x85, 0x7b, 0x89, 0x82, 0x7e, 0x82, 0x57, 0xea, 0x19, 0xb2, 0x7b, 0x6e, 0xff, 0x24, 0xec,
	0x8b, 0x82, 0x98, 0x80, 0x4e, 0x47, 0xf7, 0x24, 0x18, 0x53, 0xd9, 0xf2, 0x91, 0x78, 0x0d, 0x73,
	0xb4, 0xf6, 0x67, 0x1e, 0x0e, 0xb2, 0xd7, 0x73, 0xa0, 0xdd, 0x13, 0x6f, 0x4c, 0x7b, 0x3e, 0xb3,
	0xef, 0x9e, 0x52, 0x77, 0xb5, 0x35, 0x77, 0x57, 0x5b, 0x72, 0xb5, 0x3a, 0x75, 0x08, 0xb3, 0x1f,
	0x68, 0xec, 0x79, 0xa1, 0x56, 0x9b, 0xe5, 0xb3, 0x49, 0xab, 0xeb, 0x6c, 0x25, 0x3d, 0x69, 0x75,
	0x9b, 0x1d, 0x41, 0x65, 0x36, 0xd2, 0xd8, 0x98, 0x17, 0xc6, 0x05, 0xce, 0xe7, 0xe7, 0x38, 0xe7,
	0xf6, 0x03, 0xcd, 0xdc, 0x92, 0x05, 0xe1, 0x5e, 0xa2, 0xa0, 0x53, 0xd8, 0x96, 0x74, 0xee, 0xf9,
	0xab, 0x22, 0x63, 0xa9, 0x86, 0x7e, 0x86, 0x2d, 0xc9, 0xe5, 0x4c, 0x5a, 0x9e, 0x1c, 0xe5, 0x9a,
	0x48, 0x59, 0x26, 0xcd, 0x67, 0xb4, 0xe3, 0x8c, 0xe2, 0x62, 0x46, 0x3b, 0x9d, 0xa1, 0x1e, 0x32,
	0xdb, 0x89, 0x25, 0x95, 0xb1, 0x20, 0xa1, 0x5f, 0x60, 0x47, 0xe1, 0xec, 0xae, 0x04, 0x91, 0xb3,
	0x5c, 0xe4, 0x77, 0x8a, 0x2d, 0xf9, 0xe0, 0x69, 0x42, 0xc5, 0xdf, 0x49, 0x41, 0x4f, 0x23, 0x84,
	0x61, 0xcd, 0xd6, 0x29, 0x09, 0x7d, 0x4f, 0xfc, 0x87, 0x14, 0x74, 0x15, 0xd6, 0x3e, 0xc3, 0x46,
	0xbf, 0xf9, 0x2d, 0xfc, 0x77, 0x5f, 0x34, 0xbf, 0xe7, 0xb8, 0xbb, 0xdd, 0xd5, 0x7c, 0x37, 0xde,
	0x44, 0x3b, 0xb0, 0x4a, 0x6c, 0xd7, 0xb4, 0xd5, 0x16, 0x2a, 0x10, 0xdb, 0x6d, 0x5b, 0x68, 0x0f,
	0x8a, 0x1c, 0x33, 0xde, 0x8e, 0xfc, 0xd6, 0x58, 0x23, 0xb6, 0x2b, 0x5a, 0xd9, 0x83, 0xa2, 0x3f,
	0x61, 0x52, 0x5a, 0x91, 0x92, 0x3f, 0x61, 0x42, 0x3a, 0x80, 0x52, 0x78, 0xef, 0x47, 0x52, 0xcb,
	0xcb, 0xda, 0x1c, 0xa8, 0x25, 0x8c, 0x7c, 0x8f, 0x51, 0x8f, 0xc5, 0x7f, 0xf5, 0x2a, 0x3c, 0xfa,
	0x2b, 0xc7, 0xbf, 0xc9, 0x4c, 0xe3, 0xba, 0x69, 0x6a, 0x57, 0xdd, 0x2e, 0xda, 0x87, 0xdd, 0x54,
	0x68, 0x5e, 0xb4, 0x1a, 0xfa, 0xc0, 0x6c, 0xb6, 0x1a, 0x83, 0xca, 0xff, 0xd0, 0x16, 0x6c, 0xa6,
	0xb5, 0x86, 0x76, 0x59, 0xc9, 0x2d, 0xc0, 0xde, 0x65, 0xe5, 0x05, 0xaa, 0xc2, 0x61, 0x1a, 0x5e,
	0x1b, 0x2d, 0xdd, 0x6c, 0xf7, 0xbe, 0x5e, 0x99, 0xda, 0x45, 0xa3, 0x77, 0xde, 0xaa, 0xac, 0x20,
	0x0c, 0xdb, 0xb1, 0xe3, 0x9b, 0x91, 0xae, 0x92, 0x47, 0xbb, 0x80, 0xd2, 0xb9, 0xbd, 0xab, 0x41,
	0xfb, 0xeb, 0x6d, 0x05, 0x8e, 0x06, 0xa2, 0xb3, 0x56, 0xcf, 0xec, 0x1a, 0xe7, 0x66, 0x5f, 0xbf,
	0xd2, 0x5a, 0x86, 0x61, 0x1a, 0x83, 0x56, 0x1f, 0x1d, 0x02, 0x5e, 0x82, 0xcd, 0x76, 0xaf, 0xcd,
	0xbb, 0xfe, 0x07, 0xd5, 0xb8, 0xed, 0x69, 0x95, 0xf5, 0xe6, 0x67, 0xd8, 0x1e, 0xf9, 0xee, 0xf1,
	0x13, 0x93, 0xdf, 0xaa, 0xc3, 0xe9, 0xdd, 0x31, 0xff, 0x54, 0x6d, 0x96, 0xf8, 0xd9, 0xef, 0x73,
	0xf4, 0xbd, 0x28, 0x14, 0x37, 0x1c, 0x0f, 0x57, 0xc5, 0xaf, 0xb3, 0xbf, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xb9, 0x7e, 0x29, 0x67, 0xdd, 0x0a, 0x00, 0x00,
}
